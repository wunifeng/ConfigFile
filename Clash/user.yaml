# Clash rule doc: https://lancellc.gitbook.io/clash/clash-config-file/general

#配置思路：
#代理服务器分两大类：一、自建付费节点（包含暂时免费，将来付费）二、从各种渠道得到的免费节点
#使用代理的情况分两类：一、在国外，翻回国看视频。二、在国内，翻出墙外。

port: 7890
# port of HTTP
socks-port: 7891
# port of SOCKS5
redir-port: 7892
# port of TProxy

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to local-end server from
# other LAN IP addresses
#allow-lan: true

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
#bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

log-level: debug
# silent / error / warning / info / debug

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: true

# RESTful web API listening address
#external-controller: 127.0.0.1:9090

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
#interface-name: en0

# Static hosts for DNS server and connection establishment, only works
# when `dns.enhanced-mode` is `redir-host`.
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names has a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  'mtalk.google.com': 108.177.125.188
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'


# DNS
  # 1. clash DNS 请求逻辑：
  #   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
  #   (2) clash 将选取 nameserver 列表内，解析最快的结果。
  #   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
  #
  #   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
  #   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
  #
  # 2. clash DNS 配置注意事项：
  #   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
  #   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
  #
  # 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
  #   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
  #   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
  #   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
  #   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。
dns:
  enable: true
  ipv6: false                    # default is false
  listen: 0.0.0.0:53

  default-nameserver:               # resolve dns nameserver host, should fill pure IP
                                    # aka Bootstrap DNS
    - 1.1.1.1
    - 114.114.114.114
    - 8.8.8.8

  enhanced-mode: fake-ip     # redir-host or fake-ip

  nameserver:
#    - https://dns.adguard.com/dns-query
#    - 1.1.1.1
#    - 176.103.130.130
#    - 176.103.130.131
    - 114.114.114.114
    - 223.5.5.5
#    - https://1.1.1.1/dns-query  # dns over https

  # https://kb.adguard.com/en/general/dns-providers
  fallback:
    - 1.1.1.1
    - 8.8.8.8
    - 8.8.4.4
    - 176.103.130.130       #AdGuard DNS
    - 176.103.130.131       #AdGuard DNS
    - tls://1.1.1.1:853
    - tls://dns.quad9.net:853
    - tls://dns.google:853
    - https://dns.google/dns-query

  fallback-filter:
    geoip: true                  # default
    ipcidr:             # ips in these subnets will be considered polluted
      - 240.0.0.0/4


# Clash 4 win 的专有配置
# https://docs.cfw.lbyczf.com/contents/breakconn.html
cfw-conn-break-strategy:
    proxy: none              # none/chain/all
    profile: true           # true/false
    mode: true              # true/false

#绕过系统代理
#部分应用检测到系统代理会拒绝响应（例如网易云音乐uwp），此功能用于解决此类问题
cfw-bypass:
    - 'music.163.com' # 网易云域名1
    - '*.music.126.net' # 网易云域名2

#本地服务器配置
proxies:
    -   name: "回国SS"
        type: ss
        server: wunifeng.f3322.net
        port: 21520
        cipher: aes-256-cfb
        password: "wu221182"

    -   name: "Vultr悉尼V2Ray"
        type: vmess
        server: www.xqcul.com
        port: 443
        uuid: cee4e788-6c98-19f5-3a9c-e1a14f45858f
        alterId: 32
        cipher: auto
        # udp: true
        tls: true
        # skip-cert-verify: true
        network: ws
        ws-path: /v_2_ray-www
        # ws-headers:
        Host: www.xqcul.com

    -   name: "腾讯云香港V2Ray"
        type: vmess
        server: www.dashui8.com
        port: 443
        uuid: cee4e788-6c98-19f5-3a9c-e1a14f45858f
        alterId: 32
        cipher: auto
        # udp: true
        tls: true
        # skip-cert-verify: true
        network: ws
        ws-path: /ray
        # ws-headers:
        Host: www.dashui8.com

    -   name: "UFO-1-Trojan"
        type: trojan
        server: www.zucaipro.ga
        port: 443
        password: mytrojan001
        # udp: true
        # sni: example.com # aka server name
        # alpn:
        #   - h2
        #   - http/1.1
        # skip-cert-verify: true
        
    -   name: "UFO-2-Trojan"
        type: trojan
        server: gl2.zucaipro.ga
        port: 443
        password: mytrojan001

    -   name: "谷歌云香港Trojan"
        type: trojan
        server: www.zucaipro.tk
        port: 443
        password: mytrojan001

    -   name: "阿里云香港Trojan"
        type: trojan
        server: zucaipro.ml
        port: 443
        password: mytrojan001

proxy-providers:
    糖客节点:
        type: http
        url: "https://raw.githubusercontent.com/wunifeng/ConfigFile/master/Clash/testproxies.yaml"
        interval: 3600
        path: ./remoteProxyConfig.yaml
        health-check:
            enable: true
            interval: 600
            url: http://www.gstatic.com/generate_204

proxy-groups:
    -   name: 广告
        type: select
        proxies:
            - REJECT
            - DIRECT
            
#    -   name: 苹果服务
#        type: select
#        proxies:
#            - Proxy
#            - DIRECT

    -   name: "中国流媒体"
        type: select
        proxies:
            - DIRECT
            - 国内节点组
            
    -   name: "中国网站"
        type: select
        proxies:
            - DIRECT
            - 国内节点组
            
#    -   name: "谷歌媒体"
#        type: select
#        proxies:
#            - Proxy
#            - DIRECT
            
#这里的国外网站已经包含国外流媒体
    -   name: "国外网站"
        type: select
        proxies:
            - Proxy
            - DIRECT

#把奈飞单独列出来，测试之后从已有服务器里选择一个可以使用奈飞的服务器
#奈飞暂时使用香港节点里最快的一个，因为目前还么有奈飞账号
#等到需要奈飞账号的时候，需要修改此项
    -   name: "Netflix"
        type: select
        proxies:
            - 香港节点
            - DIRECT

#这个代理是指国外代理（人在国内时访问国外网站使用的代理）
#选择策略有两个，如果自费服务器流量用完，就选择免费服务器
#兵工厂节点是所有节点里最快的一个
#外来节点是所有免费节点里最快的一个
#自建节点筛选是自建自费节点里最快的一个
    -   name: Proxy
        type: select
        proxies:
            - DIRECT
            - 兵工厂节点
            - 轮询节点
            - 外来节点
            - 自建节点筛选

    -   name: 国内节点组
        type: select
        proxies:
            - "回国SS"
            - DIRECT

#指定香港节点，应对可能的奈飞解锁
    -   name: 香港节点
        type: url-test
        url: 'http://www.gstatic.com/generate_204'
        interval: 900
        proxies:
            - "腾讯云香港V2Ray"
            - "UFO-1-Trojan"
            - "UFO-2-Trojan"
            - "谷歌云香港Trojan"
            - "阿里云香港Trojan"

#外来节点和自建节点选择最快的一个
    -   name: 兵工厂节点
        type: url-test
        url: 'http://www.gstatic.com/generate_204'
        interval: 900
        proxies:
            - 自建节点筛选
            - 外来节点


#所有节点进行轮询，这个配置主要用在路由器上
#目的是，不需要频繁登录路由器设置，可能会牺牲速度
    -   name: 轮询节点
        type: fallback
        url: 'http://www.gstatic.com/generate_204'
        interval: 900
        proxies:
            - "UFO-1-Trojan"
            - "Vultr悉尼V2Ray"
            - "阿里云香港Trojan"
            - "腾讯云香港V2Ray"
            - "谷歌云香港Trojan"
            - "UFO-2-Trojan"
            - 外来节点

#自建节点里选择最快的一个
    -   name: 自建节点筛选
        type: url-test
        url: 'http://www.gstatic.com/generate_204'
        interval: 900
        proxies:
            - "Vultr悉尼V2Ray"
            - "腾讯云香港V2Ray"
            - "UFO-1-Trojan"
            - "UFO-2-Trojan"
            - "谷歌云香港Trojan"
            - "阿里云香港Trojan"

#外部收到的节点，因为不需要付费，如果速度快就用，速度慢就不需要用，
#所以只选最快的一个与自建节点比较
    -   name: 外来节点
        type: url-test
        url: 'http://www.gstatic.com/generate_204'
        interval: 900
        use:
            - 糖客节点

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用

    Unbreak:
        type: http
        behavior: classical
        path: ./RuleSet/Unbreak.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Unbreak.yaml
        interval: 86400
    
    Netflix:
        type: http
        behavior: classical
        path: ./RuleSet/Netflix/Netflix.yaml
        url: https://raw.githubusercontent.com/wunifeng/ConfigFile/master/Clash/Netflix.yaml
        interval: 86400

    国际流媒体:
        type: http
        behavior: classical
        path: ./RuleSet/StreamingMedia/Streaming.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Streaming.yaml
        interval: 86400

    中国流媒体:
        type: http
        behavior: classical
        path: ./RuleSet/StreamingMedia/StreamingSE.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/StreamingSE.yaml
        interval: 86400

    国外网站:
        type: http
        behavior: classical
        path: ./RuleSet/Global.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Global.yaml
        interval: 86400

    国内网站:
        type: http
        behavior: classical
        path: ./RuleSet/China.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml
        interval: 86400

    国内IP:
        type: http
        behavior: ipcidr
        path: ./RuleSet/Extra/ChinaIP.yaml
        url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/ChinaIP.yaml
        interval: 86400


rules:
    - DOMAIN,vd.l.qq.com,中国流媒体
    - DOMAIN-SUFFIX,xvideos.com,兵工厂节点

    - IP-CIDR,91.108.4.0/22,DIRECT,no-resolve
    - IP-CIDR,91.108.8.0/22,DIRECT,no-resolve
    - IP-CIDR,91.108.12.0/22,DIRECT,no-resolve
    - IP-CIDR,91.108.16.0/22,DIRECT,no-resolve
    - IP-CIDR,91.108.56.0/22,DIRECT,no-resolve
    - IP-CIDR,149.154.160.0/22,DIRECT,no-resolve
    - IP-CIDR,149.154.164.0/22,DIRECT,no-resolve
    - IP-CIDR,149.154.168.0/22,DIRECT,no-resolve
    - IP-CIDR,149.154.172.0/22,DIRECT,no-resolve

    # LAN
    - DOMAIN-SUFFIX,local,DIRECT
    - IP-CIDR,127.0.0.0/8,DIRECT
    - IP-CIDR,172.16.0.0/12,DIRECT
    - IP-CIDR,172.17.0.0/12,DIRECT
    - IP-CIDR,192.168.0.0/16,DIRECT
    - IP-CIDR,169.254.0.0/16,DIRECT
    - IP-CIDR,10.0.0.0/8,DIRECT
    - IP-CIDR,17.0.0.0/8,DIRECT
    - IP-CIDR,100.64.0.0/10,DIRECT
    - IP-CIDR,224.0.0.0/8,DIRECT
    - IP-CIDR,255.255.255.255/32,DIRECT

    # Unbreak
    - RULE-SET,Unbreak,DIRECT
    
    # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
    - RULE-SET,Netflix,Netflix
    
#    - RULE-SET,YouTube,谷歌媒体
    
    # (Streaming Media)
    - RULE-SET,国际流媒体,国外网站

    # (StreamingSE)
    - RULE-SET,中国流媒体,中国流媒体

    # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
    - RULE-SET,国外网站,国外网站
    
    # (国内网站)
    - RULE-SET,国内网站,中国网站

    - RULE-SET,国内IP,中国网站

    # Tencent
    - IP-CIDR,119.28.28.28/32,中国流媒体
    - IP-CIDR,182.254.116.0/24,中国流媒体

    # 最终规则
    - GEOIP,CN,中国网站
    - MATCH,DIRECT
